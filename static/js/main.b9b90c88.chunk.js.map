{"version":3,"sources":["Components/CartItem.js","Components/BuyPage.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","data","photos","allProduct","map","photo","medium","tinyImage","tiny","random","word","commerce","price","id","datatype","uuid","useEffect","Container","fluid","Row","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","singleItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b90c88.chunk.js","sourcesContent":["import React from \"react\"\r\nimport{\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,Button\r\n} from \"reactstrap\"\r\nconst CartItem=({product,addInCart})=>{\r\n    return(\r\n        <Card className=\"mt-2 mb-1\">\r\n            <CardImg\r\n            top\r\n            height=\"250\"\r\n            width=\"100%\"\r\n            src={product.smallImage}\r\n            />\r\n            <CardBody className=\"text-center\">\r\n                <CardTitle>{product.productName}</CardTitle>\r\n                <CardText>Price:RS{product.productPrice}</CardText>\r\n                <Button \r\n                color=\"success\"\r\n                onClick={()=>addInCart(product)}\r\n                >Buy Now</Button>\r\n            </CardBody>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CartItem;","import React,{useState,useEffect}  from \"react\"\r\nimport Axios from \"axios\"\r\nimport CartItem from \"./CartItem\"\r\nimport {random,commerce,datatype} from \"faker\"\r\nimport {Container,Col,Row} from \"reactstrap\"\r\n\r\nconst localurl=\"https://api.npoint.io/d3834bac7b6c13a61c3c\"\r\n// const apiKey=\"563492ad6f917000010000010556dba7919e4a499b518ab9a44267b9\";\r\n// const url=\"https://api.pexels.com/v1/search?query=laptop&per_page=6&page=1\"\r\n\r\n const BuyPage=({addInCart})=>{\r\n     const [product,setProduct]=useState([]);\r\n\r\n//      const fetchPhotos=async()=>{\r\n//          const {data}=await Axios.get(url,{\r\n//              header:{\r\n//                  Authorization:apiKey\r\n//              }\r\n//          })\r\n//     const {photos}=data;\r\n\r\n//     const allProduct=photos.map(photo=>({\r\n//         smallImage:photo.src.medium,\r\n//         tinyImage:photo.src.tiny,\r\n//         productName:random.word(),\r\n//         productPrice:commerce.price(),\r\n//         id:datatype.uuid()\r\n//     }))\r\n//     setProduct(allProduct);\r\n//      }\r\n     const fetchPhotos=async()=>{\r\n        const {data}=await Axios.get(localurl,{})\r\n    \r\n    const {photos}=data;\r\n\r\n    const allProduct=photos.map(photo=>({\r\n        smallImage:photo.src.medium,\r\n        tinyImage:photo.src.tiny,\r\n        productName:random.word(),\r\n        productPrice:commerce.price(),\r\n        id:datatype.uuid()\r\n    }))\r\n    setProduct(allProduct);\r\n};\r\n    useEffect(()=>{\r\n        fetchPhotos();\r\n    },[]);\r\n\r\n    return(\r\n        <Container fluid>\r\n            <h1 className=\"text-success text-center\">\r\n                Buy Page</h1>\r\n                <Row>\r\n                    {product.map(product=>(\r\n                        <Col md={4} key={product.id}>\r\n                            <CartItem product={product} addInCart={addInCart}/>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n        </Container>\r\n    )\r\n }\r\n export default BuyPage;","import React from \"react\"\r\nimport{\r\n    Container,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button,\r\n    CardHeader,\r\n    CardBody,\r\n    Card,\r\n    CardFooter,\r\n    Col,\r\n    Row\r\n} from \"reactstrap\"\r\n\r\nconst Cart=({cartItem,removeItem,buyNow})=>{\r\n    let amount=0;\r\n\r\n    cartItem.forEach(item=>{\r\n        amount=parseFloat(amount)+parseFloat(item.productPrice)\r\n    })   \r\n    return(\r\n        <Container fluid>\r\n            <h1 className=\"text-success\">Your Cart</h1>\r\n            <ListGroup>\r\n                {cartItem.map(item=>(\r\n                    <ListGroupItem key={item.id}>\r\n                    <Row>\r\n                        <Col>\r\n                        <img\r\n                        height={80}\r\n                        src={item.tinyImage}\r\n                        />\r\n                        </Col>\r\n                        <Col className=\"text-center\">\r\n                        <div className=\"text-primary\">\r\n                        {item.productName}\r\n                        </div>\r\n                        <span>price:={item.productPrice}</span>\r\n                        <Button color=\"danger\" onClick={()=>removeItem(item)}>\r\n                        Remove\r\n                        </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    </ListGroupItem>\r\n                    \r\n                ))}\r\n            </ListGroup>\r\n            {/* //if everything is empty */}\r\n                    {\r\n                        cartItem.length >=1 ? (\r\n                                <Card className=\"text-center mt-3\">\r\n                                    <CardHeader>\r\n                                        Grand Total\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        Your amount for{cartItem.length} product is {amount}\r\n                                    <CardFooter>\r\n                                        <Button color=\"success\" onClick={buyNow}>Pay Here</Button>\r\n                                    </CardFooter>\r\n                                    </CardBody>\r\n                                </Card>\r\n                        ): (\r\n                            <h1 className=\"text-warning\">Cart is empty</h1>\r\n                        )\r\n                    }\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart;","import React,{useState} from \"react\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport './App.css';\nimport {Container,Row,Col} from \"reactstrap\"\nimport {toast,ToastContainer} from \"react-toastify\"\nimport BuyPage from \"./Components/BuyPage\";\nimport Cart from \"./Components/Cart\"\nfunction App() {\n  const [cartItem,setCartItem]=useState([])\n\n  const addInCart=(item)=>{\n    const isAlreadyAdded=cartItem.findIndex(function(array){\n      return array.id===item.id\n    })\n    if(isAlreadyAdded !==-1){\n      toast(\"Already added in cart\",{\n        type:\"error\"\n      })\n      return;\n    }\n    setCartItem([...cartItem,item]);\n  }\n    const buyNow=()=>{\n      setCartItem([]);\n      toast(\"Purchase Complete\",{\n        type:\"success\"\n      })\n    };\n\n    const  removeItem=item=>{\n      setCartItem(cartItem.filter(singleItem=>singleItem.id!==item.id))\n    }\n\n  return (\n    <Container fluid>\n      <ToastContainer/>\n      <Row>\n        <Col md=\"8\">\n          <BuyPage addInCart={addInCart}/>\n        </Col>\n        <Col md=\"4\">\n          <Cart cartItem={cartItem} removeItem={removeItem} buyNow={buyNow}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}